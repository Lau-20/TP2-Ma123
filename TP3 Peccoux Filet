# -*- coding: utf-8 -*-
"""
Created on Fri Apr  2 10:47:00 2021

@author: valen

"""
from math import *

def Newton(f,fder,x0,epsilon,Nitermax):
     xold = x0
     xnew = xold - (f(xold)/fder(xold))
     
     n= 1 
     
     Nitermax = 0 
     
     while abs(xnew - xold) > epsilon and n < Nitermax :
         xold = xnew
         xnew = x0 - (f(x0)/fder(x0))
         n = n + 1
     return xnew,n 

# 1

def f1(x):
    return x**4 + 3*x - 9

def fder1(x):
    return 4 * x **3 + 3

print (Newton(f1, fder1, 1.5, 1, 2))

print (Newton(f1, fder1, -2, -2.5, -1.5))

# 2

def f2(x):
    return 3*cos(x)-2-x

def fder2(x):
    return -3*sin(x)-1

print (Newton(f2, fder2, 0.5, 0, 1))

print (Newton(f2, fder2, -1.4, -1.5, -1))

print (Newton(f2, fder2, -4.1, -4.5, -3.5))

# 3

def f3(x):
    return x*exp(x)-7

def fder3(x):
    return x*exp(x)*(x + 1)

print (Newton(f3, fder3, 1.5, 1.25, 2))

# 4

def f4(x):
    return exp(x) - x - 10

def fder4(x):
    return exp(x) - 1

print (Newton(f4, fder4, 2.5, 2, 3))

print (Newton(f4, fder4, -10.2, -11.5, -9.5))

# 5

def f5(x):
    return 2*tan(x) - x - 5

def fder5(x):
    return 2/(cos(x)**2) - 1

print (Newton(f5, fder5, 1.3, 1, 2))

# 6

def f6(x):
    return exp(x) - x**2 - 3

def fder6(x):
    return exp(x) - 2*x

print (Newton(f6, fder6, 1.88, 1, 3))

# 7

def f7(x):
    return 3*x + 4*log(x) - 7

def fder7(x):
    return 4/x + 3

print (Newton(f7, fder7, 1.65, 1, 2))

# 8

def f8(x):
    return x**4 - 2*x**2 + x -17

def fder8(x):
    return 4*x**3 - 4*x + 1

print (Newton(f8, fder8, 2, 2, 2.5))

print (Newton(f8, fder8, -2.5, -2.6, -2.4))

# 9

def f9(x):
    return exp(x) - 2*sin(x) - 7

def fder9(x):
    return exp(x) - 2*cos(x)

print (Newton(f9, fder9, 2.16, 2, 3))

# 10

def f10(x):
    return log(x**2 + 4)*exp(x) - 10

def fder10(x):
    return exp(x)*(log(x**2 +4) + 2*x/(x**2+4))

print (Newton(f10, fder10, 1.66, 1, 2))

